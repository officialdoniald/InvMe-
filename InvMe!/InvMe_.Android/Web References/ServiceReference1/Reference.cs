//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace InvMe_.Droid.ServiceReference1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IDatabaseService", Namespace="http://tempuri.org/")]
    public partial class BasicHttpBinding_IDatabaseService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFriendsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertHashtagsMOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAttendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteHashtagOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFriendOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAttendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHashtagOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFriendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHashtagOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFriendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByEMAILOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHashtagByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFriendByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttendedByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttendedByEventIDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BasicHttpBinding_IDatabaseService() {
            this.Url = "http://invmewcf20170521114912.azurewebsites.net/DatabaseService.svc";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertUserCompletedEventHandler InsertUserCompleted;
        
        /// <remarks/>
        public event InsertEventsCompletedEventHandler InsertEventsCompleted;
        
        /// <remarks/>
        public event InsertFriendsCompletedEventHandler InsertFriendsCompleted;
        
        /// <remarks/>
        public event InsertHashtagsMCompletedEventHandler InsertHashtagsMCompleted;
        
        /// <remarks/>
        public event InsertAttendedCompletedEventHandler InsertAttendedCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event DeleteEventCompletedEventHandler DeleteEventCompleted;
        
        /// <remarks/>
        public event DeleteHashtagCompletedEventHandler DeleteHashtagCompleted;
        
        /// <remarks/>
        public event DeleteFriendCompletedEventHandler DeleteFriendCompleted;
        
        /// <remarks/>
        public event DeleteAttendedCompletedEventHandler DeleteAttendedCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event UpdateEventCompletedEventHandler UpdateEventCompleted;
        
        /// <remarks/>
        public event UpdateHashtagCompletedEventHandler UpdateHashtagCompleted;
        
        /// <remarks/>
        public event UpdateFriendCompletedEventHandler UpdateFriendCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetEventCompletedEventHandler GetEventCompleted;
        
        /// <remarks/>
        public event GetHashtagCompletedEventHandler GetHashtagCompleted;
        
        /// <remarks/>
        public event GetFriendCompletedEventHandler GetFriendCompleted;
        
        /// <remarks/>
        public event GetAttendedCompletedEventHandler GetAttendedCompleted;
        
        /// <remarks/>
        public event GetUserByIDCompletedEventHandler GetUserByIDCompleted;
        
        /// <remarks/>
        public event GetUserByEMAILCompletedEventHandler GetUserByEMAILCompleted;
        
        /// <remarks/>
        public event GetEventByIDCompletedEventHandler GetEventByIDCompleted;
        
        /// <remarks/>
        public event GetHashtagByIDCompletedEventHandler GetHashtagByIDCompleted;
        
        /// <remarks/>
        public event GetFriendByIDCompletedEventHandler GetFriendByIDCompleted;
        
        /// <remarks/>
        public event GetAttendedByIDCompletedEventHandler GetAttendedByIDCompleted;
        
        /// <remarks/>
        public event GetAttendedByEventIDCompletedEventHandler GetAttendedByEventIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/InsertUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] User user, out bool InsertUserResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool InsertUserResultSpecified) {
            object[] results = this.Invoke("InsertUser", new object[] {
                        user});
            InsertUserResult = ((bool)(results[0]));
            InsertUserResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void InsertUserAsync(User user) {
            this.InsertUserAsync(user, null);
        }
        
        /// <remarks/>
        public void InsertUserAsync(User user, object userState) {
            if ((this.InsertUserOperationCompleted == null)) {
                this.InsertUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUserOperationCompleted);
            }
            this.InvokeAsync("InsertUser", new object[] {
                        user}, this.InsertUserOperationCompleted, userState);
        }
        
        private void OnInsertUserOperationCompleted(object arg) {
            if ((this.InsertUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUserCompleted(this, new InsertUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/InsertEvents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertEvents([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Events events, out int InsertEventsResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool InsertEventsResultSpecified) {
            object[] results = this.Invoke("InsertEvents", new object[] {
                        events});
            InsertEventsResult = ((int)(results[0]));
            InsertEventsResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void InsertEventsAsync(Events events) {
            this.InsertEventsAsync(events, null);
        }
        
        /// <remarks/>
        public void InsertEventsAsync(Events events, object userState) {
            if ((this.InsertEventsOperationCompleted == null)) {
                this.InsertEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEventsOperationCompleted);
            }
            this.InvokeAsync("InsertEvents", new object[] {
                        events}, this.InsertEventsOperationCompleted, userState);
        }
        
        private void OnInsertEventsOperationCompleted(object arg) {
            if ((this.InsertEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEventsCompleted(this, new InsertEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/InsertFriends", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InsertFriends([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Friends friends) {
            object[] results = this.Invoke("InsertFriends", new object[] {
                        friends});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertFriendsAsync(Friends friends) {
            this.InsertFriendsAsync(friends, null);
        }
        
        /// <remarks/>
        public void InsertFriendsAsync(Friends friends, object userState) {
            if ((this.InsertFriendsOperationCompleted == null)) {
                this.InsertFriendsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFriendsOperationCompleted);
            }
            this.InvokeAsync("InsertFriends", new object[] {
                        friends}, this.InsertFriendsOperationCompleted, userState);
        }
        
        private void OnInsertFriendsOperationCompleted(object arg) {
            if ((this.InsertFriendsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFriendsCompleted(this, new InsertFriendsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/InsertHashtagsM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InsertHashtagsM([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] HashtagsM hashtags) {
            object[] results = this.Invoke("InsertHashtagsM", new object[] {
                        hashtags});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertHashtagsMAsync(HashtagsM hashtags) {
            this.InsertHashtagsMAsync(hashtags, null);
        }
        
        /// <remarks/>
        public void InsertHashtagsMAsync(HashtagsM hashtags, object userState) {
            if ((this.InsertHashtagsMOperationCompleted == null)) {
                this.InsertHashtagsMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertHashtagsMOperationCompleted);
            }
            this.InvokeAsync("InsertHashtagsM", new object[] {
                        hashtags}, this.InsertHashtagsMOperationCompleted, userState);
        }
        
        private void OnInsertHashtagsMOperationCompleted(object arg) {
            if ((this.InsertHashtagsMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertHashtagsMCompleted(this, new InsertHashtagsMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/InsertAttended", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertAttended([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Attended attended, out bool InsertAttendedResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool InsertAttendedResultSpecified) {
            object[] results = this.Invoke("InsertAttended", new object[] {
                        attended});
            InsertAttendedResult = ((bool)(results[0]));
            InsertAttendedResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void InsertAttendedAsync(Attended attended) {
            this.InsertAttendedAsync(attended, null);
        }
        
        /// <remarks/>
        public void InsertAttendedAsync(Attended attended, object userState) {
            if ((this.InsertAttendedOperationCompleted == null)) {
                this.InsertAttendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAttendedOperationCompleted);
            }
            this.InvokeAsync("InsertAttended", new object[] {
                        attended}, this.InsertAttendedOperationCompleted, userState);
        }
        
        private void OnInsertAttendedOperationCompleted(object arg) {
            if ((this.InsertAttendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAttendedCompleted(this, new InsertAttendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/DeleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] User user, out bool DeleteUserResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteUserResultSpecified) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        user});
            DeleteUserResult = ((bool)(results[0]));
            DeleteUserResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(User user) {
            this.DeleteUserAsync(user, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(User user, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        user}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/DeleteEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEvent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Events events, out bool DeleteEventResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteEventResultSpecified) {
            object[] results = this.Invoke("DeleteEvent", new object[] {
                        events});
            DeleteEventResult = ((bool)(results[0]));
            DeleteEventResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteEventAsync(Events events) {
            this.DeleteEventAsync(events, null);
        }
        
        /// <remarks/>
        public void DeleteEventAsync(Events events, object userState) {
            if ((this.DeleteEventOperationCompleted == null)) {
                this.DeleteEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEventOperationCompleted);
            }
            this.InvokeAsync("DeleteEvent", new object[] {
                        events}, this.DeleteEventOperationCompleted, userState);
        }
        
        private void OnDeleteEventOperationCompleted(object arg) {
            if ((this.DeleteEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEventCompleted(this, new DeleteEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/DeleteHashtag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteHashtag([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] HashtagsM hastag, out bool DeleteHashtagResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteHashtagResultSpecified) {
            object[] results = this.Invoke("DeleteHashtag", new object[] {
                        hastag});
            DeleteHashtagResult = ((bool)(results[0]));
            DeleteHashtagResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteHashtagAsync(HashtagsM hastag) {
            this.DeleteHashtagAsync(hastag, null);
        }
        
        /// <remarks/>
        public void DeleteHashtagAsync(HashtagsM hastag, object userState) {
            if ((this.DeleteHashtagOperationCompleted == null)) {
                this.DeleteHashtagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteHashtagOperationCompleted);
            }
            this.InvokeAsync("DeleteHashtag", new object[] {
                        hastag}, this.DeleteHashtagOperationCompleted, userState);
        }
        
        private void OnDeleteHashtagOperationCompleted(object arg) {
            if ((this.DeleteHashtagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteHashtagCompleted(this, new DeleteHashtagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/DeleteFriend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFriend([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Friends friend, out bool DeleteFriendResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteFriendResultSpecified) {
            object[] results = this.Invoke("DeleteFriend", new object[] {
                        friend});
            DeleteFriendResult = ((bool)(results[0]));
            DeleteFriendResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteFriendAsync(Friends friend) {
            this.DeleteFriendAsync(friend, null);
        }
        
        /// <remarks/>
        public void DeleteFriendAsync(Friends friend, object userState) {
            if ((this.DeleteFriendOperationCompleted == null)) {
                this.DeleteFriendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFriendOperationCompleted);
            }
            this.InvokeAsync("DeleteFriend", new object[] {
                        friend}, this.DeleteFriendOperationCompleted, userState);
        }
        
        private void OnDeleteFriendOperationCompleted(object arg) {
            if ((this.DeleteFriendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFriendCompleted(this, new DeleteFriendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/DeleteAttended", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAttended([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Attended attend, out bool DeleteAttendedResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteAttendedResultSpecified) {
            object[] results = this.Invoke("DeleteAttended", new object[] {
                        attend});
            DeleteAttendedResult = ((bool)(results[0]));
            DeleteAttendedResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteAttendedAsync(Attended attend) {
            this.DeleteAttendedAsync(attend, null);
        }
        
        /// <remarks/>
        public void DeleteAttendedAsync(Attended attend, object userState) {
            if ((this.DeleteAttendedOperationCompleted == null)) {
                this.DeleteAttendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAttendedOperationCompleted);
            }
            this.InvokeAsync("DeleteAttended", new object[] {
                        attend}, this.DeleteAttendedOperationCompleted, userState);
        }
        
        private void OnDeleteAttendedOperationCompleted(object arg) {
            if ((this.DeleteAttendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAttendedCompleted(this, new DeleteAttendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/UpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUser(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] User user, out bool UpdateUserResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateUserResultSpecified) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        ID,
                        IDSpecified,
                        user});
            UpdateUserResult = ((bool)(results[0]));
            UpdateUserResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(int ID, bool IDSpecified, User user) {
            this.UpdateUserAsync(ID, IDSpecified, user, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(int ID, bool IDSpecified, User user, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        ID,
                        IDSpecified,
                        user}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/UpdateEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateEvent(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Events events, out bool UpdateEventResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateEventResultSpecified) {
            object[] results = this.Invoke("UpdateEvent", new object[] {
                        ID,
                        IDSpecified,
                        events});
            UpdateEventResult = ((bool)(results[0]));
            UpdateEventResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateEventAsync(int ID, bool IDSpecified, Events events) {
            this.UpdateEventAsync(ID, IDSpecified, events, null);
        }
        
        /// <remarks/>
        public void UpdateEventAsync(int ID, bool IDSpecified, Events events, object userState) {
            if ((this.UpdateEventOperationCompleted == null)) {
                this.UpdateEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEventOperationCompleted);
            }
            this.InvokeAsync("UpdateEvent", new object[] {
                        ID,
                        IDSpecified,
                        events}, this.UpdateEventOperationCompleted, userState);
        }
        
        private void OnUpdateEventOperationCompleted(object arg) {
            if ((this.UpdateEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEventCompleted(this, new UpdateEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/UpdateHashtag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateHashtag(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] HashtagsM hastag, out bool UpdateHashtagResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateHashtagResultSpecified) {
            object[] results = this.Invoke("UpdateHashtag", new object[] {
                        ID,
                        IDSpecified,
                        hastag});
            UpdateHashtagResult = ((bool)(results[0]));
            UpdateHashtagResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateHashtagAsync(int ID, bool IDSpecified, HashtagsM hastag) {
            this.UpdateHashtagAsync(ID, IDSpecified, hastag, null);
        }
        
        /// <remarks/>
        public void UpdateHashtagAsync(int ID, bool IDSpecified, HashtagsM hastag, object userState) {
            if ((this.UpdateHashtagOperationCompleted == null)) {
                this.UpdateHashtagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHashtagOperationCompleted);
            }
            this.InvokeAsync("UpdateHashtag", new object[] {
                        ID,
                        IDSpecified,
                        hastag}, this.UpdateHashtagOperationCompleted, userState);
        }
        
        private void OnUpdateHashtagOperationCompleted(object arg) {
            if ((this.UpdateHashtagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHashtagCompleted(this, new UpdateHashtagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/UpdateFriend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFriend(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Friends friend, out bool UpdateFriendResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateFriendResultSpecified) {
            object[] results = this.Invoke("UpdateFriend", new object[] {
                        ID,
                        IDSpecified,
                        friend});
            UpdateFriendResult = ((bool)(results[0]));
            UpdateFriendResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateFriendAsync(int ID, bool IDSpecified, Friends friend) {
            this.UpdateFriendAsync(ID, IDSpecified, friend, null);
        }
        
        /// <remarks/>
        public void UpdateFriendAsync(int ID, bool IDSpecified, Friends friend, object userState) {
            if ((this.UpdateFriendOperationCompleted == null)) {
                this.UpdateFriendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFriendOperationCompleted);
            }
            this.InvokeAsync("UpdateFriend", new object[] {
                        ID,
                        IDSpecified,
                        friend}, this.UpdateFriendOperationCompleted, userState);
        }
        
        private void OnUpdateFriendOperationCompleted(object arg) {
            if ((this.UpdateFriendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFriendCompleted(this, new UpdateFriendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
        public User[] GetUser() {
            object[] results = this.Invoke("GetUser", new object[0]);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync() {
            this.GetUserAsync(null);
        }
        
        /// <remarks/>
        public void GetUserAsync(object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[0], this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
        public Events[] GetEvent() {
            object[] results = this.Invoke("GetEvent", new object[0]);
            return ((Events[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEventAsync() {
            this.GetEventAsync(null);
        }
        
        /// <remarks/>
        public void GetEventAsync(object userState) {
            if ((this.GetEventOperationCompleted == null)) {
                this.GetEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventOperationCompleted);
            }
            this.InvokeAsync("GetEvent", new object[0], this.GetEventOperationCompleted, userState);
        }
        
        private void OnGetEventOperationCompleted(object arg) {
            if ((this.GetEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventCompleted(this, new GetEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetHashtag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
        public HashtagsM[] GetHashtag() {
            object[] results = this.Invoke("GetHashtag", new object[0]);
            return ((HashtagsM[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHashtagAsync() {
            this.GetHashtagAsync(null);
        }
        
        /// <remarks/>
        public void GetHashtagAsync(object userState) {
            if ((this.GetHashtagOperationCompleted == null)) {
                this.GetHashtagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHashtagOperationCompleted);
            }
            this.InvokeAsync("GetHashtag", new object[0], this.GetHashtagOperationCompleted, userState);
        }
        
        private void OnGetHashtagOperationCompleted(object arg) {
            if ((this.GetHashtagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHashtagCompleted(this, new GetHashtagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetFriend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
        public Friends[] GetFriend() {
            object[] results = this.Invoke("GetFriend", new object[0]);
            return ((Friends[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFriendAsync() {
            this.GetFriendAsync(null);
        }
        
        /// <remarks/>
        public void GetFriendAsync(object userState) {
            if ((this.GetFriendOperationCompleted == null)) {
                this.GetFriendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFriendOperationCompleted);
            }
            this.InvokeAsync("GetFriend", new object[0], this.GetFriendOperationCompleted, userState);
        }
        
        private void OnGetFriendOperationCompleted(object arg) {
            if ((this.GetFriendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFriendCompleted(this, new GetFriendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetAttended", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
        public Attended[] GetAttended() {
            object[] results = this.Invoke("GetAttended", new object[0]);
            return ((Attended[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAttendedAsync() {
            this.GetAttendedAsync(null);
        }
        
        /// <remarks/>
        public void GetAttendedAsync(object userState) {
            if ((this.GetAttendedOperationCompleted == null)) {
                this.GetAttendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttendedOperationCompleted);
            }
            this.InvokeAsync("GetAttended", new object[0], this.GetAttendedOperationCompleted, userState);
        }
        
        private void OnGetAttendedOperationCompleted(object arg) {
            if ((this.GetAttendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttendedCompleted(this, new GetAttendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetUserByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public User GetUserByID(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified) {
            object[] results = this.Invoke("GetUserByID", new object[] {
                        ID,
                        IDSpecified});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByIDAsync(int ID, bool IDSpecified) {
            this.GetUserByIDAsync(ID, IDSpecified, null);
        }
        
        /// <remarks/>
        public void GetUserByIDAsync(int ID, bool IDSpecified, object userState) {
            if ((this.GetUserByIDOperationCompleted == null)) {
                this.GetUserByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByIDOperationCompleted);
            }
            this.InvokeAsync("GetUserByID", new object[] {
                        ID,
                        IDSpecified}, this.GetUserByIDOperationCompleted, userState);
        }
        
        private void OnGetUserByIDOperationCompleted(object arg) {
            if ((this.GetUserByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByIDCompleted(this, new GetUserByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetUserByEMAIL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public User GetUserByEMAIL([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EMAIL) {
            object[] results = this.Invoke("GetUserByEMAIL", new object[] {
                        EMAIL});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByEMAILAsync(string EMAIL) {
            this.GetUserByEMAILAsync(EMAIL, null);
        }
        
        /// <remarks/>
        public void GetUserByEMAILAsync(string EMAIL, object userState) {
            if ((this.GetUserByEMAILOperationCompleted == null)) {
                this.GetUserByEMAILOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByEMAILOperationCompleted);
            }
            this.InvokeAsync("GetUserByEMAIL", new object[] {
                        EMAIL}, this.GetUserByEMAILOperationCompleted, userState);
        }
        
        private void OnGetUserByEMAILOperationCompleted(object arg) {
            if ((this.GetUserByEMAILCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByEMAILCompleted(this, new GetUserByEMAILCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetEventByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Events GetEventByID(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified) {
            object[] results = this.Invoke("GetEventByID", new object[] {
                        ID,
                        IDSpecified});
            return ((Events)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventByIDAsync(int ID, bool IDSpecified) {
            this.GetEventByIDAsync(ID, IDSpecified, null);
        }
        
        /// <remarks/>
        public void GetEventByIDAsync(int ID, bool IDSpecified, object userState) {
            if ((this.GetEventByIDOperationCompleted == null)) {
                this.GetEventByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventByIDOperationCompleted);
            }
            this.InvokeAsync("GetEventByID", new object[] {
                        ID,
                        IDSpecified}, this.GetEventByIDOperationCompleted, userState);
        }
        
        private void OnGetEventByIDOperationCompleted(object arg) {
            if ((this.GetEventByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventByIDCompleted(this, new GetEventByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetHashtagByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public HashtagsM GetHashtagByID(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified) {
            object[] results = this.Invoke("GetHashtagByID", new object[] {
                        ID,
                        IDSpecified});
            return ((HashtagsM)(results[0]));
        }
        
        /// <remarks/>
        public void GetHashtagByIDAsync(int ID, bool IDSpecified) {
            this.GetHashtagByIDAsync(ID, IDSpecified, null);
        }
        
        /// <remarks/>
        public void GetHashtagByIDAsync(int ID, bool IDSpecified, object userState) {
            if ((this.GetHashtagByIDOperationCompleted == null)) {
                this.GetHashtagByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHashtagByIDOperationCompleted);
            }
            this.InvokeAsync("GetHashtagByID", new object[] {
                        ID,
                        IDSpecified}, this.GetHashtagByIDOperationCompleted, userState);
        }
        
        private void OnGetHashtagByIDOperationCompleted(object arg) {
            if ((this.GetHashtagByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHashtagByIDCompleted(this, new GetHashtagByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetFriendByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Friends GetFriendByID(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified) {
            object[] results = this.Invoke("GetFriendByID", new object[] {
                        ID,
                        IDSpecified});
            return ((Friends)(results[0]));
        }
        
        /// <remarks/>
        public void GetFriendByIDAsync(int ID, bool IDSpecified) {
            this.GetFriendByIDAsync(ID, IDSpecified, null);
        }
        
        /// <remarks/>
        public void GetFriendByIDAsync(int ID, bool IDSpecified, object userState) {
            if ((this.GetFriendByIDOperationCompleted == null)) {
                this.GetFriendByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFriendByIDOperationCompleted);
            }
            this.InvokeAsync("GetFriendByID", new object[] {
                        ID,
                        IDSpecified}, this.GetFriendByIDOperationCompleted, userState);
        }
        
        private void OnGetFriendByIDOperationCompleted(object arg) {
            if ((this.GetFriendByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFriendByIDCompleted(this, new GetFriendByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetAttendedByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
        public Attended[] GetAttendedByID(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified) {
            object[] results = this.Invoke("GetAttendedByID", new object[] {
                        ID,
                        IDSpecified});
            return ((Attended[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAttendedByIDAsync(int ID, bool IDSpecified) {
            this.GetAttendedByIDAsync(ID, IDSpecified, null);
        }
        
        /// <remarks/>
        public void GetAttendedByIDAsync(int ID, bool IDSpecified, object userState) {
            if ((this.GetAttendedByIDOperationCompleted == null)) {
                this.GetAttendedByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttendedByIDOperationCompleted);
            }
            this.InvokeAsync("GetAttendedByID", new object[] {
                        ID,
                        IDSpecified}, this.GetAttendedByIDOperationCompleted, userState);
        }
        
        private void OnGetAttendedByIDOperationCompleted(object arg) {
            if ((this.GetAttendedByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttendedByIDCompleted(this, new GetAttendedByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetAttendedByEventID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
        public Attended[] GetAttendedByEventID(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified) {
            object[] results = this.Invoke("GetAttendedByEventID", new object[] {
                        ID,
                        IDSpecified});
            return ((Attended[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAttendedByEventIDAsync(int ID, bool IDSpecified) {
            this.GetAttendedByEventIDAsync(ID, IDSpecified, null);
        }
        
        /// <remarks/>
        public void GetAttendedByEventIDAsync(int ID, bool IDSpecified, object userState) {
            if ((this.GetAttendedByEventIDOperationCompleted == null)) {
                this.GetAttendedByEventIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttendedByEventIDOperationCompleted);
            }
            this.InvokeAsync("GetAttendedByEventID", new object[] {
                        ID,
                        IDSpecified}, this.GetAttendedByEventIDOperationCompleted, userState);
        }
        
        private void OnGetAttendedByEventIDOperationCompleted(object arg) {
            if ((this.GetAttendedByEventIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttendedByEventIDCompleted(this, new GetAttendedByEventIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpsBinding_IDatabaseService", Namespace="http://tempuri.org/")]
    public partial class BasicHttpsBinding_IDatabaseService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFriendsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertHashtagsMOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAttendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteHashtagOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFriendOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAttendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHashtagOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFriendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHashtagOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFriendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByEMAILOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHashtagByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFriendByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttendedByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttendedByEventIDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BasicHttpsBinding_IDatabaseService() {
            this.Url = "https://invmewcf20170521114912.azurewebsites.net/DatabaseService.svc";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertUserCompletedEventHandler InsertUserCompleted;
        
        /// <remarks/>
        public event InsertEventsCompletedEventHandler InsertEventsCompleted;
        
        /// <remarks/>
        public event InsertFriendsCompletedEventHandler InsertFriendsCompleted;
        
        /// <remarks/>
        public event InsertHashtagsMCompletedEventHandler InsertHashtagsMCompleted;
        
        /// <remarks/>
        public event InsertAttendedCompletedEventHandler InsertAttendedCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event DeleteEventCompletedEventHandler DeleteEventCompleted;
        
        /// <remarks/>
        public event DeleteHashtagCompletedEventHandler DeleteHashtagCompleted;
        
        /// <remarks/>
        public event DeleteFriendCompletedEventHandler DeleteFriendCompleted;
        
        /// <remarks/>
        public event DeleteAttendedCompletedEventHandler DeleteAttendedCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event UpdateEventCompletedEventHandler UpdateEventCompleted;
        
        /// <remarks/>
        public event UpdateHashtagCompletedEventHandler UpdateHashtagCompleted;
        
        /// <remarks/>
        public event UpdateFriendCompletedEventHandler UpdateFriendCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetEventCompletedEventHandler GetEventCompleted;
        
        /// <remarks/>
        public event GetHashtagCompletedEventHandler GetHashtagCompleted;
        
        /// <remarks/>
        public event GetFriendCompletedEventHandler GetFriendCompleted;
        
        /// <remarks/>
        public event GetAttendedCompletedEventHandler GetAttendedCompleted;
        
        /// <remarks/>
        public event GetUserByIDCompletedEventHandler GetUserByIDCompleted;
        
        /// <remarks/>
        public event GetUserByEMAILCompletedEventHandler GetUserByEMAILCompleted;
        
        /// <remarks/>
        public event GetEventByIDCompletedEventHandler GetEventByIDCompleted;
        
        /// <remarks/>
        public event GetHashtagByIDCompletedEventHandler GetHashtagByIDCompleted;
        
        /// <remarks/>
        public event GetFriendByIDCompletedEventHandler GetFriendByIDCompleted;
        
        /// <remarks/>
        public event GetAttendedByIDCompletedEventHandler GetAttendedByIDCompleted;
        
        /// <remarks/>
        public event GetAttendedByEventIDCompletedEventHandler GetAttendedByEventIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/InsertUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] User user, out bool InsertUserResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool InsertUserResultSpecified) {
            object[] results = this.Invoke("InsertUser", new object[] {
                        user});
            InsertUserResult = ((bool)(results[0]));
            InsertUserResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void InsertUserAsync(User user) {
            this.InsertUserAsync(user, null);
        }
        
        /// <remarks/>
        public void InsertUserAsync(User user, object userState) {
            if ((this.InsertUserOperationCompleted == null)) {
                this.InsertUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUserOperationCompleted);
            }
            this.InvokeAsync("InsertUser", new object[] {
                        user}, this.InsertUserOperationCompleted, userState);
        }
        
        private void OnInsertUserOperationCompleted(object arg) {
            if ((this.InsertUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUserCompleted(this, new InsertUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/InsertEvents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertEvents([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Events events, out int InsertEventsResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool InsertEventsResultSpecified) {
            object[] results = this.Invoke("InsertEvents", new object[] {
                        events});
            InsertEventsResult = ((int)(results[0]));
            InsertEventsResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void InsertEventsAsync(Events events) {
            this.InsertEventsAsync(events, null);
        }
        
        /// <remarks/>
        public void InsertEventsAsync(Events events, object userState) {
            if ((this.InsertEventsOperationCompleted == null)) {
                this.InsertEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEventsOperationCompleted);
            }
            this.InvokeAsync("InsertEvents", new object[] {
                        events}, this.InsertEventsOperationCompleted, userState);
        }
        
        private void OnInsertEventsOperationCompleted(object arg) {
            if ((this.InsertEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEventsCompleted(this, new InsertEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/InsertFriends", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InsertFriends([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Friends friends) {
            object[] results = this.Invoke("InsertFriends", new object[] {
                        friends});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertFriendsAsync(Friends friends) {
            this.InsertFriendsAsync(friends, null);
        }
        
        /// <remarks/>
        public void InsertFriendsAsync(Friends friends, object userState) {
            if ((this.InsertFriendsOperationCompleted == null)) {
                this.InsertFriendsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFriendsOperationCompleted);
            }
            this.InvokeAsync("InsertFriends", new object[] {
                        friends}, this.InsertFriendsOperationCompleted, userState);
        }
        
        private void OnInsertFriendsOperationCompleted(object arg) {
            if ((this.InsertFriendsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFriendsCompleted(this, new InsertFriendsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/InsertHashtagsM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InsertHashtagsM([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] HashtagsM hashtags) {
            object[] results = this.Invoke("InsertHashtagsM", new object[] {
                        hashtags});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertHashtagsMAsync(HashtagsM hashtags) {
            this.InsertHashtagsMAsync(hashtags, null);
        }
        
        /// <remarks/>
        public void InsertHashtagsMAsync(HashtagsM hashtags, object userState) {
            if ((this.InsertHashtagsMOperationCompleted == null)) {
                this.InsertHashtagsMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertHashtagsMOperationCompleted);
            }
            this.InvokeAsync("InsertHashtagsM", new object[] {
                        hashtags}, this.InsertHashtagsMOperationCompleted, userState);
        }
        
        private void OnInsertHashtagsMOperationCompleted(object arg) {
            if ((this.InsertHashtagsMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertHashtagsMCompleted(this, new InsertHashtagsMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/InsertAttended", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertAttended([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Attended attended, out bool InsertAttendedResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool InsertAttendedResultSpecified) {
            object[] results = this.Invoke("InsertAttended", new object[] {
                        attended});
            InsertAttendedResult = ((bool)(results[0]));
            InsertAttendedResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void InsertAttendedAsync(Attended attended) {
            this.InsertAttendedAsync(attended, null);
        }
        
        /// <remarks/>
        public void InsertAttendedAsync(Attended attended, object userState) {
            if ((this.InsertAttendedOperationCompleted == null)) {
                this.InsertAttendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAttendedOperationCompleted);
            }
            this.InvokeAsync("InsertAttended", new object[] {
                        attended}, this.InsertAttendedOperationCompleted, userState);
        }
        
        private void OnInsertAttendedOperationCompleted(object arg) {
            if ((this.InsertAttendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAttendedCompleted(this, new InsertAttendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/DeleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] User user, out bool DeleteUserResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteUserResultSpecified) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        user});
            DeleteUserResult = ((bool)(results[0]));
            DeleteUserResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(User user) {
            this.DeleteUserAsync(user, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(User user, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        user}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/DeleteEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEvent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Events events, out bool DeleteEventResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteEventResultSpecified) {
            object[] results = this.Invoke("DeleteEvent", new object[] {
                        events});
            DeleteEventResult = ((bool)(results[0]));
            DeleteEventResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteEventAsync(Events events) {
            this.DeleteEventAsync(events, null);
        }
        
        /// <remarks/>
        public void DeleteEventAsync(Events events, object userState) {
            if ((this.DeleteEventOperationCompleted == null)) {
                this.DeleteEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEventOperationCompleted);
            }
            this.InvokeAsync("DeleteEvent", new object[] {
                        events}, this.DeleteEventOperationCompleted, userState);
        }
        
        private void OnDeleteEventOperationCompleted(object arg) {
            if ((this.DeleteEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEventCompleted(this, new DeleteEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/DeleteHashtag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteHashtag([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] HashtagsM hastag, out bool DeleteHashtagResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteHashtagResultSpecified) {
            object[] results = this.Invoke("DeleteHashtag", new object[] {
                        hastag});
            DeleteHashtagResult = ((bool)(results[0]));
            DeleteHashtagResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteHashtagAsync(HashtagsM hastag) {
            this.DeleteHashtagAsync(hastag, null);
        }
        
        /// <remarks/>
        public void DeleteHashtagAsync(HashtagsM hastag, object userState) {
            if ((this.DeleteHashtagOperationCompleted == null)) {
                this.DeleteHashtagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteHashtagOperationCompleted);
            }
            this.InvokeAsync("DeleteHashtag", new object[] {
                        hastag}, this.DeleteHashtagOperationCompleted, userState);
        }
        
        private void OnDeleteHashtagOperationCompleted(object arg) {
            if ((this.DeleteHashtagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteHashtagCompleted(this, new DeleteHashtagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/DeleteFriend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFriend([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Friends friend, out bool DeleteFriendResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteFriendResultSpecified) {
            object[] results = this.Invoke("DeleteFriend", new object[] {
                        friend});
            DeleteFriendResult = ((bool)(results[0]));
            DeleteFriendResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteFriendAsync(Friends friend) {
            this.DeleteFriendAsync(friend, null);
        }
        
        /// <remarks/>
        public void DeleteFriendAsync(Friends friend, object userState) {
            if ((this.DeleteFriendOperationCompleted == null)) {
                this.DeleteFriendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFriendOperationCompleted);
            }
            this.InvokeAsync("DeleteFriend", new object[] {
                        friend}, this.DeleteFriendOperationCompleted, userState);
        }
        
        private void OnDeleteFriendOperationCompleted(object arg) {
            if ((this.DeleteFriendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFriendCompleted(this, new DeleteFriendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/DeleteAttended", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAttended([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Attended attend, out bool DeleteAttendedResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteAttendedResultSpecified) {
            object[] results = this.Invoke("DeleteAttended", new object[] {
                        attend});
            DeleteAttendedResult = ((bool)(results[0]));
            DeleteAttendedResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteAttendedAsync(Attended attend) {
            this.DeleteAttendedAsync(attend, null);
        }
        
        /// <remarks/>
        public void DeleteAttendedAsync(Attended attend, object userState) {
            if ((this.DeleteAttendedOperationCompleted == null)) {
                this.DeleteAttendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAttendedOperationCompleted);
            }
            this.InvokeAsync("DeleteAttended", new object[] {
                        attend}, this.DeleteAttendedOperationCompleted, userState);
        }
        
        private void OnDeleteAttendedOperationCompleted(object arg) {
            if ((this.DeleteAttendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAttendedCompleted(this, new DeleteAttendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/UpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUser(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] User user, out bool UpdateUserResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateUserResultSpecified) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        ID,
                        IDSpecified,
                        user});
            UpdateUserResult = ((bool)(results[0]));
            UpdateUserResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(int ID, bool IDSpecified, User user) {
            this.UpdateUserAsync(ID, IDSpecified, user, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(int ID, bool IDSpecified, User user, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        ID,
                        IDSpecified,
                        user}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/UpdateEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateEvent(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Events events, out bool UpdateEventResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateEventResultSpecified) {
            object[] results = this.Invoke("UpdateEvent", new object[] {
                        ID,
                        IDSpecified,
                        events});
            UpdateEventResult = ((bool)(results[0]));
            UpdateEventResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateEventAsync(int ID, bool IDSpecified, Events events) {
            this.UpdateEventAsync(ID, IDSpecified, events, null);
        }
        
        /// <remarks/>
        public void UpdateEventAsync(int ID, bool IDSpecified, Events events, object userState) {
            if ((this.UpdateEventOperationCompleted == null)) {
                this.UpdateEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEventOperationCompleted);
            }
            this.InvokeAsync("UpdateEvent", new object[] {
                        ID,
                        IDSpecified,
                        events}, this.UpdateEventOperationCompleted, userState);
        }
        
        private void OnUpdateEventOperationCompleted(object arg) {
            if ((this.UpdateEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEventCompleted(this, new UpdateEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/UpdateHashtag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateHashtag(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] HashtagsM hastag, out bool UpdateHashtagResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateHashtagResultSpecified) {
            object[] results = this.Invoke("UpdateHashtag", new object[] {
                        ID,
                        IDSpecified,
                        hastag});
            UpdateHashtagResult = ((bool)(results[0]));
            UpdateHashtagResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateHashtagAsync(int ID, bool IDSpecified, HashtagsM hastag) {
            this.UpdateHashtagAsync(ID, IDSpecified, hastag, null);
        }
        
        /// <remarks/>
        public void UpdateHashtagAsync(int ID, bool IDSpecified, HashtagsM hastag, object userState) {
            if ((this.UpdateHashtagOperationCompleted == null)) {
                this.UpdateHashtagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHashtagOperationCompleted);
            }
            this.InvokeAsync("UpdateHashtag", new object[] {
                        ID,
                        IDSpecified,
                        hastag}, this.UpdateHashtagOperationCompleted, userState);
        }
        
        private void OnUpdateHashtagOperationCompleted(object arg) {
            if ((this.UpdateHashtagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHashtagCompleted(this, new UpdateHashtagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/UpdateFriend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFriend(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Friends friend, out bool UpdateFriendResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateFriendResultSpecified) {
            object[] results = this.Invoke("UpdateFriend", new object[] {
                        ID,
                        IDSpecified,
                        friend});
            UpdateFriendResult = ((bool)(results[0]));
            UpdateFriendResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateFriendAsync(int ID, bool IDSpecified, Friends friend) {
            this.UpdateFriendAsync(ID, IDSpecified, friend, null);
        }
        
        /// <remarks/>
        public void UpdateFriendAsync(int ID, bool IDSpecified, Friends friend, object userState) {
            if ((this.UpdateFriendOperationCompleted == null)) {
                this.UpdateFriendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFriendOperationCompleted);
            }
            this.InvokeAsync("UpdateFriend", new object[] {
                        ID,
                        IDSpecified,
                        friend}, this.UpdateFriendOperationCompleted, userState);
        }
        
        private void OnUpdateFriendOperationCompleted(object arg) {
            if ((this.UpdateFriendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFriendCompleted(this, new UpdateFriendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
        public User[] GetUser() {
            object[] results = this.Invoke("GetUser", new object[0]);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync() {
            this.GetUserAsync(null);
        }
        
        /// <remarks/>
        public void GetUserAsync(object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[0], this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
        public Events[] GetEvent() {
            object[] results = this.Invoke("GetEvent", new object[0]);
            return ((Events[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEventAsync() {
            this.GetEventAsync(null);
        }
        
        /// <remarks/>
        public void GetEventAsync(object userState) {
            if ((this.GetEventOperationCompleted == null)) {
                this.GetEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventOperationCompleted);
            }
            this.InvokeAsync("GetEvent", new object[0], this.GetEventOperationCompleted, userState);
        }
        
        private void OnGetEventOperationCompleted(object arg) {
            if ((this.GetEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventCompleted(this, new GetEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetHashtag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
        public HashtagsM[] GetHashtag() {
            object[] results = this.Invoke("GetHashtag", new object[0]);
            return ((HashtagsM[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHashtagAsync() {
            this.GetHashtagAsync(null);
        }
        
        /// <remarks/>
        public void GetHashtagAsync(object userState) {
            if ((this.GetHashtagOperationCompleted == null)) {
                this.GetHashtagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHashtagOperationCompleted);
            }
            this.InvokeAsync("GetHashtag", new object[0], this.GetHashtagOperationCompleted, userState);
        }
        
        private void OnGetHashtagOperationCompleted(object arg) {
            if ((this.GetHashtagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHashtagCompleted(this, new GetHashtagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetFriend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
        public Friends[] GetFriend() {
            object[] results = this.Invoke("GetFriend", new object[0]);
            return ((Friends[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFriendAsync() {
            this.GetFriendAsync(null);
        }
        
        /// <remarks/>
        public void GetFriendAsync(object userState) {
            if ((this.GetFriendOperationCompleted == null)) {
                this.GetFriendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFriendOperationCompleted);
            }
            this.InvokeAsync("GetFriend", new object[0], this.GetFriendOperationCompleted, userState);
        }
        
        private void OnGetFriendOperationCompleted(object arg) {
            if ((this.GetFriendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFriendCompleted(this, new GetFriendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetAttended", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
        public Attended[] GetAttended() {
            object[] results = this.Invoke("GetAttended", new object[0]);
            return ((Attended[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAttendedAsync() {
            this.GetAttendedAsync(null);
        }
        
        /// <remarks/>
        public void GetAttendedAsync(object userState) {
            if ((this.GetAttendedOperationCompleted == null)) {
                this.GetAttendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttendedOperationCompleted);
            }
            this.InvokeAsync("GetAttended", new object[0], this.GetAttendedOperationCompleted, userState);
        }
        
        private void OnGetAttendedOperationCompleted(object arg) {
            if ((this.GetAttendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttendedCompleted(this, new GetAttendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetUserByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public User GetUserByID(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified) {
            object[] results = this.Invoke("GetUserByID", new object[] {
                        ID,
                        IDSpecified});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByIDAsync(int ID, bool IDSpecified) {
            this.GetUserByIDAsync(ID, IDSpecified, null);
        }
        
        /// <remarks/>
        public void GetUserByIDAsync(int ID, bool IDSpecified, object userState) {
            if ((this.GetUserByIDOperationCompleted == null)) {
                this.GetUserByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByIDOperationCompleted);
            }
            this.InvokeAsync("GetUserByID", new object[] {
                        ID,
                        IDSpecified}, this.GetUserByIDOperationCompleted, userState);
        }
        
        private void OnGetUserByIDOperationCompleted(object arg) {
            if ((this.GetUserByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByIDCompleted(this, new GetUserByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetUserByEMAIL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public User GetUserByEMAIL([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EMAIL) {
            object[] results = this.Invoke("GetUserByEMAIL", new object[] {
                        EMAIL});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByEMAILAsync(string EMAIL) {
            this.GetUserByEMAILAsync(EMAIL, null);
        }
        
        /// <remarks/>
        public void GetUserByEMAILAsync(string EMAIL, object userState) {
            if ((this.GetUserByEMAILOperationCompleted == null)) {
                this.GetUserByEMAILOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByEMAILOperationCompleted);
            }
            this.InvokeAsync("GetUserByEMAIL", new object[] {
                        EMAIL}, this.GetUserByEMAILOperationCompleted, userState);
        }
        
        private void OnGetUserByEMAILOperationCompleted(object arg) {
            if ((this.GetUserByEMAILCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByEMAILCompleted(this, new GetUserByEMAILCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetEventByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Events GetEventByID(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified) {
            object[] results = this.Invoke("GetEventByID", new object[] {
                        ID,
                        IDSpecified});
            return ((Events)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventByIDAsync(int ID, bool IDSpecified) {
            this.GetEventByIDAsync(ID, IDSpecified, null);
        }
        
        /// <remarks/>
        public void GetEventByIDAsync(int ID, bool IDSpecified, object userState) {
            if ((this.GetEventByIDOperationCompleted == null)) {
                this.GetEventByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventByIDOperationCompleted);
            }
            this.InvokeAsync("GetEventByID", new object[] {
                        ID,
                        IDSpecified}, this.GetEventByIDOperationCompleted, userState);
        }
        
        private void OnGetEventByIDOperationCompleted(object arg) {
            if ((this.GetEventByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventByIDCompleted(this, new GetEventByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetHashtagByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public HashtagsM GetHashtagByID(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified) {
            object[] results = this.Invoke("GetHashtagByID", new object[] {
                        ID,
                        IDSpecified});
            return ((HashtagsM)(results[0]));
        }
        
        /// <remarks/>
        public void GetHashtagByIDAsync(int ID, bool IDSpecified) {
            this.GetHashtagByIDAsync(ID, IDSpecified, null);
        }
        
        /// <remarks/>
        public void GetHashtagByIDAsync(int ID, bool IDSpecified, object userState) {
            if ((this.GetHashtagByIDOperationCompleted == null)) {
                this.GetHashtagByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHashtagByIDOperationCompleted);
            }
            this.InvokeAsync("GetHashtagByID", new object[] {
                        ID,
                        IDSpecified}, this.GetHashtagByIDOperationCompleted, userState);
        }
        
        private void OnGetHashtagByIDOperationCompleted(object arg) {
            if ((this.GetHashtagByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHashtagByIDCompleted(this, new GetHashtagByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetFriendByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Friends GetFriendByID(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified) {
            object[] results = this.Invoke("GetFriendByID", new object[] {
                        ID,
                        IDSpecified});
            return ((Friends)(results[0]));
        }
        
        /// <remarks/>
        public void GetFriendByIDAsync(int ID, bool IDSpecified) {
            this.GetFriendByIDAsync(ID, IDSpecified, null);
        }
        
        /// <remarks/>
        public void GetFriendByIDAsync(int ID, bool IDSpecified, object userState) {
            if ((this.GetFriendByIDOperationCompleted == null)) {
                this.GetFriendByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFriendByIDOperationCompleted);
            }
            this.InvokeAsync("GetFriendByID", new object[] {
                        ID,
                        IDSpecified}, this.GetFriendByIDOperationCompleted, userState);
        }
        
        private void OnGetFriendByIDOperationCompleted(object arg) {
            if ((this.GetFriendByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFriendByIDCompleted(this, new GetFriendByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetAttendedByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
        public Attended[] GetAttendedByID(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified) {
            object[] results = this.Invoke("GetAttendedByID", new object[] {
                        ID,
                        IDSpecified});
            return ((Attended[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAttendedByIDAsync(int ID, bool IDSpecified) {
            this.GetAttendedByIDAsync(ID, IDSpecified, null);
        }
        
        /// <remarks/>
        public void GetAttendedByIDAsync(int ID, bool IDSpecified, object userState) {
            if ((this.GetAttendedByIDOperationCompleted == null)) {
                this.GetAttendedByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttendedByIDOperationCompleted);
            }
            this.InvokeAsync("GetAttendedByID", new object[] {
                        ID,
                        IDSpecified}, this.GetAttendedByIDOperationCompleted, userState);
        }
        
        private void OnGetAttendedByIDOperationCompleted(object arg) {
            if ((this.GetAttendedByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttendedByIDCompleted(this, new GetAttendedByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDatabaseService/GetAttendedByEventID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
        public Attended[] GetAttendedByEventID(int ID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IDSpecified) {
            object[] results = this.Invoke("GetAttendedByEventID", new object[] {
                        ID,
                        IDSpecified});
            return ((Attended[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAttendedByEventIDAsync(int ID, bool IDSpecified) {
            this.GetAttendedByEventIDAsync(ID, IDSpecified, null);
        }
        
        /// <remarks/>
        public void GetAttendedByEventIDAsync(int ID, bool IDSpecified, object userState) {
            if ((this.GetAttendedByEventIDOperationCompleted == null)) {
                this.GetAttendedByEventIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttendedByEventIDOperationCompleted);
            }
            this.InvokeAsync("GetAttendedByEventID", new object[] {
                        ID,
                        IDSpecified}, this.GetAttendedByEventIDOperationCompleted, userState);
        }
        
        private void OnGetAttendedByEventIDOperationCompleted(object arg) {
            if ((this.GetAttendedByEventIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttendedByEventIDCompleted(this, new GetAttendedByEventIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
    public partial class User {
        
        private System.DateTime bORNDATEField;
        
        private bool bORNDATEFieldSpecified;
        
        private string eMAILField;
        
        private string fACEBOOKField;
        
        private string fIRSTNAMEField;
        
        private string lASTNAMEField;
        
        private string pASSWORDField;
        
        private byte[] pROFILEPICTUREField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        /// <remarks/>
        public System.DateTime BORNDATE {
            get {
                return this.bORNDATEField;
            }
            set {
                this.bORNDATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BORNDATESpecified {
            get {
                return this.bORNDATEFieldSpecified;
            }
            set {
                this.bORNDATEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EMAIL {
            get {
                return this.eMAILField;
            }
            set {
                this.eMAILField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FACEBOOK {
            get {
                return this.fACEBOOKField;
            }
            set {
                this.fACEBOOKField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FIRSTNAME {
            get {
                return this.fIRSTNAMEField;
            }
            set {
                this.fIRSTNAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LASTNAME {
            get {
                return this.lASTNAMEField;
            }
            set {
                this.lASTNAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PASSWORD {
            get {
                return this.pASSWORDField;
            }
            set {
                this.pASSWORDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] PROFILEPICTURE {
            get {
                return this.pROFILEPICTUREField;
            }
            set {
                this.pROFILEPICTUREField = value;
            }
        }
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
    public partial class Attended {
        
        private int event_idField;
        
        private bool event_idFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private int user_idField;
        
        private bool user_idFieldSpecified;
        
        /// <remarks/>
        public int event_id {
            get {
                return this.event_idField;
            }
            set {
                this.event_idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool event_idSpecified {
            get {
                return this.event_idFieldSpecified;
            }
            set {
                this.event_idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool user_idSpecified {
            get {
                return this.user_idFieldSpecified;
            }
            set {
                this.user_idFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
    public partial class HashtagsM {
        
        private string hASHTAGField;
        
        private string tOWNField;
        
        private int uIDField;
        
        private bool uIDFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HASHTAG {
            get {
                return this.hASHTAGField;
            }
            set {
                this.hASHTAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TOWN {
            get {
                return this.tOWNField;
            }
            set {
                this.tOWNField = value;
            }
        }
        
        /// <remarks/>
        public int UID {
            get {
                return this.uIDField;
            }
            set {
                this.uIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UIDSpecified {
            get {
                return this.uIDFieldSpecified;
            }
            set {
                this.uIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
    public partial class Friends {
        
        private int gUIDField;
        
        private bool gUIDFieldSpecified;
        
        private int sUIDField;
        
        private bool sUIDFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        /// <remarks/>
        public int GUID {
            get {
                return this.gUIDField;
            }
            set {
                this.gUIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GUIDSpecified {
            get {
                return this.gUIDFieldSpecified;
            }
            set {
                this.gUIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SUID {
            get {
                return this.sUIDField;
            }
            set {
                this.sUIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SUIDSpecified {
            get {
                return this.sUIDFieldSpecified;
            }
            set {
                this.sUIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/System")]
    public partial class DateTimeOffset {
        
        private System.DateTime dateTimeField;
        
        private short offsetMinutesField;
        
        /// <remarks/>
        public System.DateTime DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        public short OffsetMinutes {
            get {
                return this.offsetMinutesField;
            }
            set {
                this.offsetMinutesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/InvMe.DAL.Model")]
    public partial class Events {
        
        private string dESCRIPTIONField;
        
        private string eVENTNAMEField;
        
        private DateTimeOffset fROMField;
        
        private int hOWMANYField;
        
        private bool hOWMANYFieldSpecified;
        
        private string mDESCRIPTIONField;
        
        private string mEETINGCORDField;
        
        private int oNLINEField;
        
        private bool oNLINEFieldSpecified;
        
        private string pLACEField;
        
        private string pLACECORDField;
        
        private DateTimeOffset toField;
        
        private string tOWNField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DESCRIPTION {
            get {
                return this.dESCRIPTIONField;
            }
            set {
                this.dESCRIPTIONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EVENTNAME {
            get {
                return this.eVENTNAMEField;
            }
            set {
                this.eVENTNAMEField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeOffset FROM {
            get {
                return this.fROMField;
            }
            set {
                this.fROMField = value;
            }
        }
        
        /// <remarks/>
        public int HOWMANY {
            get {
                return this.hOWMANYField;
            }
            set {
                this.hOWMANYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HOWMANYSpecified {
            get {
                return this.hOWMANYFieldSpecified;
            }
            set {
                this.hOWMANYFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MDESCRIPTION {
            get {
                return this.mDESCRIPTIONField;
            }
            set {
                this.mDESCRIPTIONField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MEETINGCORD {
            get {
                return this.mEETINGCORDField;
            }
            set {
                this.mEETINGCORDField = value;
            }
        }
        
        /// <remarks/>
        public int ONLINE {
            get {
                return this.oNLINEField;
            }
            set {
                this.oNLINEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ONLINESpecified {
            get {
                return this.oNLINEFieldSpecified;
            }
            set {
                this.oNLINEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PLACE {
            get {
                return this.pLACEField;
            }
            set {
                this.pLACEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PLACECORD {
            get {
                return this.pLACECORDField;
            }
            set {
                this.pLACECORDField = value;
            }
        }
        
        /// <remarks/>
        public DateTimeOffset TO {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TOWN {
            get {
                return this.tOWNField;
            }
            set {
                this.tOWNField = value;
            }
        }
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void InsertUserCompletedEventHandler(object sender, InsertUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool InsertUserResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool InsertUserResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void InsertEventsCompletedEventHandler(object sender, InsertEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int InsertEventsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool InsertEventsResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void InsertFriendsCompletedEventHandler(object sender, InsertFriendsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertFriendsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertFriendsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void InsertHashtagsMCompletedEventHandler(object sender, InsertHashtagsMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertHashtagsMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertHashtagsMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void InsertAttendedCompletedEventHandler(object sender, InsertAttendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAttendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAttendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool InsertAttendedResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool InsertAttendedResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool DeleteUserResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteUserResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteEventCompletedEventHandler(object sender, DeleteEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool DeleteEventResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteEventResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteHashtagCompletedEventHandler(object sender, DeleteHashtagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteHashtagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteHashtagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool DeleteHashtagResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteHashtagResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteFriendCompletedEventHandler(object sender, DeleteFriendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFriendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFriendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool DeleteFriendResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteFriendResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void DeleteAttendedCompletedEventHandler(object sender, DeleteAttendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAttendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAttendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool DeleteAttendedResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteAttendedResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateUserResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateUserResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UpdateEventCompletedEventHandler(object sender, UpdateEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateEventResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateEventResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UpdateHashtagCompletedEventHandler(object sender, UpdateHashtagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateHashtagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateHashtagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateHashtagResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateHashtagResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UpdateFriendCompletedEventHandler(object sender, UpdateFriendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFriendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFriendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateFriendResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateFriendResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetEventCompletedEventHandler(object sender, GetEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Events[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Events[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetHashtagCompletedEventHandler(object sender, GetHashtagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHashtagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHashtagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HashtagsM[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HashtagsM[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFriendCompletedEventHandler(object sender, GetFriendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFriendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFriendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Friends[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Friends[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAttendedCompletedEventHandler(object sender, GetAttendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Attended[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Attended[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetUserByIDCompletedEventHandler(object sender, GetUserByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetUserByEMAILCompletedEventHandler(object sender, GetUserByEMAILCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByEMAILCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByEMAILCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetEventByIDCompletedEventHandler(object sender, GetEventByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Events Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Events)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetHashtagByIDCompletedEventHandler(object sender, GetHashtagByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHashtagByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHashtagByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HashtagsM Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HashtagsM)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFriendByIDCompletedEventHandler(object sender, GetFriendByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFriendByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFriendByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Friends Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Friends)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAttendedByIDCompletedEventHandler(object sender, GetAttendedByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttendedByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttendedByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Attended[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Attended[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetAttendedByEventIDCompletedEventHandler(object sender, GetAttendedByEventIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttendedByEventIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttendedByEventIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Attended[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Attended[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591